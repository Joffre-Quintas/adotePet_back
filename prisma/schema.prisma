generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id           String    @id() @default(uuid())
  cep          String    @db.VarChar(8)
  street       String
  city         String
  neighborhood String
  state        String    @db.VarChar(2)
  number       String
  complement   String?   
  user         User[]
  ong          Ong[]
  createdAt    DateTime  @map("created_at")
  updatedAt    DateTime? @map("updated_at")

  @@map("addresses")
}

model User {
  id           String    @id @default(uuid())
  fullName     String    @map("full_name")
  cpf          String    @unique @db.VarChar(11)
  sex          String
  password     String
  phone        String    @unique @db.VarChar(11)
  email        String    @unique
  worker       Boolean?
  typeOfAccess String    @map("type_of_access")
  dateBirth    DateTime  @map("date_birth") @db.Date
  address      Address   @relation(fields: [addressId], references: [id])
  addressId    String    @map("address_id")
  ong          Ong?      @relation(fields: [ongId], references: [id])
  ongId        String?   @map("ong_id")
  pet          pet[]
  createdAt    DateTime  @map("created_at")
  updatedAt    DateTime? @map("updated_at")

  @@map("users")
}

model Ong {
  id          String    @id @default(uuid())
  cnpj        String    @unique @db.VarChar(14)
  fantasyName String    @map("fantasy_name")
  companyName String    @unique @map("company_name")
  phone       String    @unique
  email       String    @unique
  address     Address   @relation(fields: [addressId], references: [id])
  addressId   String    @map("address_id")
  user        User[]
  pet         pet[]
  createdAt   DateTime  @map("created_at")
  updatedAt   DateTime? @map("updated_at")

  @@map("ongs")
}

model pet {
  id                      Int       @id @default(autoincrement())
  race                    String
  sex                     String
  isAdopted               Boolean
  temporaryName           String    @map("temporary_name")
  name                    String?
  color                   String
  describe                String
  size                    String
  urlPhoto                String
  dateOfBirth             DateTime  @map("date_of_birth") @db.Date
  ifDeficient             Boolean
  descriptionOfDisability String    @map("description_of_disability")
  species                 String
  user                    User?     @relation(fields: [userId], references: [id])
  userId                  String?   @map("user_id")
  ong                     Ong       @relation(fields: [ongId], references: [id])
  ongId                   String    @map("ong_id")
  createdAt               DateTime  @map("created_at")
  updatedAt               DateTime? @map("updated_at")

  @@map("pets")
}
